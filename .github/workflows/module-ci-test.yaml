name: module-ci-test

on:
  workflow_call:
    secrets:
      ARM_CLIENT_ID:
      ARM_SUBSCRIPTION_ID:
      ARM_TENANT_ID:

jobs:
  test-examples:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Get terraform version
        id: terraform_version
        uses: cloudeteer/actions/get-terraform-version@main
        with:
          directory: tests/remote

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3
        with:
          terraform_version: ${{ steps.terraform_version.outputs.required_version }}

      - name: terraform test examples
        run: |
          terraform init -test-directory=tests/examples
          terraform test -test-directory=tests/examples

  test-local:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Get terraform version
        id: terraform_version
        uses: cloudeteer/actions/get-terraform-version@main
        with:
          directory: tests/remote

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3
        with:
          terraform_version: ${{ steps.terraform_version.outputs.required_version }}

      - name: terraform test local
        run: |
          terraform init -test-directory=tests/local
          terraform test -test-directory=tests/local

  test-remote:
    # This workflow is configured to run remote tests only on pull requests.
    # The Azure Managed Identity Federation configuration restricts authentication to the 'pull_request' event type.
    # Additionally, remote tests are skipped for draft pull requests.
    if: github.event_name == 'pull_request' && github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Get terraform version
        id: terraform_version
        uses: cloudeteer/actions/get-terraform-version@main
        with:
          directory: tests/remote

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3
        with:
          terraform_version: ${{ steps.terraform_version.outputs.required_version }}

      - name: az login
        uses: azure/login@a457da9ea143d694b1b9c7c869ebb04ebe844ef5 # v2
        with:
          client-id: ${{ secrets.ARM_CLIENT_ID }}
          tenant-id: ${{ secrets.ARM_TENANT_ID }}
          subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

      - name: terraform test remote
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_USE_OIDC: true
        run: |
          terraform init -test-directory=tests/remote
          terraform test -test-directory=tests/remote
